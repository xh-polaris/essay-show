// Code generated by hertz generator.

package show

import (
	"context"
	"github.com/xh-polaris/essay-show/biz/adaptor"
	"github.com/xh-polaris/essay-show/provider"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	show "github.com/xh-polaris/essay-show/biz/application/dto/essay/show"
)

// SignUp .
// @router /user/sign_up [POST]
func SignUp(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.SignUpReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.UserService.SignUp(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// SignIn .
// @router /user/sign_in [POST]
func SignIn(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.SignInReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.UserService.SignIn(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// GetUserInfo .
// @router /user/info [GET]
func GetUserInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.GetUserInfoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.UserService.GetUserInfo(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// EssayEvaluate .
// @router /essay/evaluate [POST]
func EssayEvaluate(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.EssayEvaluateReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.EssayService.EssayEvaluate(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// GetEvaluateLogs .
// @router /essay/logs [POST]
func GetEvaluateLogs(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.GetEssayEvaluateLogsReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.EssayService.GetEvaluateLogs(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}
