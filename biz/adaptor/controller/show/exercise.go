// Code generated by hertz generator.

package show

import (
	"context"
	"github.com/xh-polaris/essay-show/biz/adaptor"
	"github.com/xh-polaris/essay-show/provider"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	show "github.com/xh-polaris/essay-show/biz/application/dto/essay/show"
)

// CreateExercise .
// @router /exercise/create [POST]
func CreateExercise(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.CreateExerciseReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.ExerciseService.CreateExercise(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// ListSimpleExercises .
// @router /exercise/simple/list [POST]
func ListSimpleExercises(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.ListSimpleExercisesReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.ExerciseService.ListSimpleExercises(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// GetExercise .
// @router /exercise/get [POST]
func GetExercise(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.GetExerciseReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.ExerciseService.GetExercise(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// DoExercise .
// @router /exercise/do [POST]
func DoExercise(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.DoExerciseReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.ExerciseService.DoExercise(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}
