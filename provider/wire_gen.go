// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/xh-polaris/essay-show/biz/application/service"
	"github.com/xh-polaris/essay-show/biz/infrastructure/config"
	"github.com/xh-polaris/essay-show/biz/infrastructure/mapper/attend"
	"github.com/xh-polaris/essay-show/biz/infrastructure/mapper/exercise"
	"github.com/xh-polaris/essay-show/biz/infrastructure/mapper/invitation"
	"github.com/xh-polaris/essay-show/biz/infrastructure/mapper/log"
	"github.com/xh-polaris/essay-show/biz/infrastructure/mapper/user"
	"github.com/xh-polaris/essay-show/biz/infrastructure/rpc/platform_sts"
)

// Injectors from wire.go:

func NewProvider() (*Provider, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	mongoMapper := user.NewMongoMapper(configConfig)
	attendMongoMapper := attend.NewMongoMapper(configConfig)
	codeMongoMapper := invitation.NewCodeMongoMapper(configConfig)
	logMongoMapper := invitation.NewLogMongoMapper(configConfig)
	userService := service.UserService{
		UserMapper:   mongoMapper,
		AttendMapper: attendMongoMapper,
		CodeMapper:   codeMongoMapper,
		LogMapper:    logMongoMapper,
	}
	mongoMapper2 := log.NewMongoMapper(configConfig)
	essayService := service.EssayService{
		LogMapper:  mongoMapper2,
		UserMapper: mongoMapper,
	}
	client := platform_sts.NewPlatformSts(configConfig)
	platformSts := &platform_sts.PlatformSts{
		Client: client,
	}
	stsService := service.StsService{
		PlatformSts: platformSts,
		UserMapper:  mongoMapper,
	}
	exerciseMongoMapper := exercise.NewMongoMapper(configConfig)
	exerciseService := service.ExerciseService{
		ExerciseMapper: exerciseMongoMapper,
		LogMapper:      mongoMapper2,
		UserMapper:     mongoMapper,
	}
	providerProvider := &Provider{
		Config:          configConfig,
		UserService:     userService,
		EssayService:    essayService,
		StsService:      stsService,
		ExerciseService: exerciseService,
	}
	return providerProvider, nil
}
